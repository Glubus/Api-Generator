{{#each tags}}
### FILE {{this.name}}.py

{{#with_set "tags" this.name}}

from flask import Blueprint, jsonify, request
from typing import List
from ..models.models import *
from ..helpers.{{this.name}} import *

api = Blueprint('api', __name__)

{{#each ../paths}}
{{#each this}}
{{#if (eq (test_tags_controller (get "tags") this.tags) 1)}}
@api.route('{{flask_router @../key}}', methods=['{{@key}}'])
def {{@key}}_{{route_namer @../key}}({{#if this.parameters}}{{#each this.parameters}}{{this.name}}: {{#with this.schema}}{{#if (eq this.type "object")}}{{type this.type this.x-refName}}{{else}}{{#if (eq this.type "array")}}{{#if (eq this.items.type "object")}}{{type this.type this.items.type this.items.x-refName}}{{else}}{{type this.type this.items.type}}{{/if}}{{else}}{{type this.type this.format}}{{/if}}{{/if}}{{/with}}{{#unless @last}}, {{/unless}}{{/each}}{{/if}}) :
    {{#if (eq @key "get")}}
    # TODO: Implement your own query 
    items = query_{{route_namer @../key}}({{#if this.parameters}}{{#each this.parameters}}{{this.name}}{{/each}}{{/if}})  # Replace with actual database query 
    return jsonify([item.to_dict() for item in items])
    {{/if}}
{{/if}}
{{/each}}
{{/each}} 
{{/with_set}}
{{/each}}
### / FILE